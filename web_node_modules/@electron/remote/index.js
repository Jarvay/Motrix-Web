import { Checkbox, MessageBox } from 'element-ui'
import { notSupport } from 'utils'
import Vue from 'vue'

Vue.use(Checkbox)

const MESSAGE_TYPE_MAP = new Map([
  ['info', 'info'],
  ['error', 'error'],
  ['warning', 'warning'],
  ['question', 'info']
])

export const app = {
  getVersion () {
    return 'motrix-web'
  }
}

export const shell = {}

export const nativeTheme = {}

export const getCurrentWindow = () => {
  return {
    minimize () {
      notSupport()
    },

    maximize () {
      notSupport()
    },

    unmaximize () {
      notSupport()
    },

    isMaximized () {
      notSupport()
    },

    close () {
      notSupport()
    }
  }
}

export const webContents = {}

export const dialog = {
  showMessageBox (options) {
    const vueInstance = new Vue({
      data: {
        checked: options.checkboxChecked || false
      }
    })
    const h = vueInstance.$createElement
    const checkbox = h('el-checkbox', {
      on: {
        input: function (value) {
          vueInstance.$data.checked = value
        }
      },
      props: {
        checked: vueInstance.$data.checked
      }
    }, options.checkboxLabel)

    return MessageBox({
      type: MESSAGE_TYPE_MAP.get(options.type),
      message: h('div', null, [
        h('div', null, options.message),
        options.checkboxLabel && checkbox
      ]),
      title: options.title,
      confirmButtonText: options.buttons[0],
      cancelButtonText: options.buttons[1],
      showCancelButton: true
    })
      .then(() => {
        return Promise.resolve({
          response: 0,
          checkboxChecked: checkbox.componentInstance.model
        })
      })
      .catch((e) => {
        return Promise.resolve({
          response: 1,
          checkboxChecked: checkbox.componentInstance.model
        })
      })
  },

  showOpenDialog () {
    notSupport()
    return new Promise(resolve => {
      resolve({ canceled: true, filePaths: [] })
    })
  }
}
